#!/usr/bin/perl -w

use strict;

my (%all_parms);
my (%curr_ndx);
my (%sizes);

open(CONF, "<$ARGV[0]");
my @lines = <CONF>;
close(CONF);

foreach (@lines) { chomp; }

## build the hash table
foreach my $line (@lines)
{
  my ($pname,$pvals) = split ':',$line;
  my (@vals) = split ',',$pvals;

  $all_parms{$pname} = \@vals;
  $curr_ndx{$pname} = 0;
  $sizes{$pname} = scalar(@vals);
}

## now print it
foreach my $key (keys(%all_parms))
{
  print $key . "\t";
}

my $ret_val = 0;
while($ret_val != 1)
{
  print "\n";
  foreach my $key (keys(%all_parms))
  {
    print $all_parms{$key}->[$curr_ndx{$key}] . "\t";
  }
  $ret_val = iterate();
}

print "\n";
exit(0);

## prep index of each array to print next line
sub iterate
{
  my $rolled_over;

  foreach my $key (reverse(keys(%sizes)))
  {
    ## increment to the next number
    if($curr_ndx{$key} == $sizes{$key}-1)
    {
      $curr_ndx{$key} = 0;
      $rolled_over = 1;
    } 
    else
    {
      $curr_ndx{$key}++;
      $rolled_over = 0;
    } 

    if($rolled_over == 0) { return 0; }
  }

  return 1;
}
